=======================================================================================
# CSS 문단 스타일
https://codepen.io/codeld6/pen/OYjvBB
======================================================================================

/* 
@ direction
-> 글자 쓰기 방향 지정 속성

ltr	: 왼쪽에서 오른쪽으로 텍스를 표시
rtl	: 오른쪽으로 왼쪽으로 텍스트 표시

선택자 { direction : ltr 또는 rtl; }
*/

/* 
@ text-align
-> 문자위치를 조정(정렬)하는 속성

left		: 왼쪽에 맞추어 정렬
right		: 오른쪽에 맞추어 정렬
center		: 가운데 맞추어 정렬
justify		: 양쪽에 맞추어 문단 정렬
	※ https://www.w3schools.com/cssref/playit.asp?filename=playcss_text-align&preval=justify

#p1 { text-align  : left;}
*/

/*

@ text-indent
-> 문장을 들여쓰기 하는 속성

기본 형식

선택자 {text-indent:숫자(단위); }

*/
/*

@ line-height
-> 문장끼리의 줄 간격을 조정하는 속성

기본형식

선택자 {line-height: normal 또는 숫자(단위); }

*/
/*

@ text-overflow
-> 영역을 벗어나는 텍스트 표시 속성

clip		: 영역을 넘어가는 텍스트를 자름
ellipsis	: 말 줄임으로 잘린 텍스트 표현

선택자{text-overflow : clip 또는 ellipsis; }

*/

=======================================================================================
# CSS 목록&링크 스타일
https://codepen.io/codeld6/pen/PvKeKr
======================================================================================

/*
@ list-style-type
-> 목록 기호의 스타일을 지정하는 속성

ul
- disc		: 흑색 원형
- circle	: 흰색 원형
- square	: 흑색 사각형
- none		: 기호 표시 안하기

ol
- decimal			: 1로 시작 십진수
- decimal-leading-zero		: 앞에 0이 붙은 십진수
- lower-roman / upper-roman	: 소문자 로마자 / 대문자 로마자
- lower-alpha / lower-latin	: 소문자 알파벳
- upper-alpha / upper-latin	: 대문자 알파벳

*/

/*
@ list-style-image
-> 기호 대신 이미지 삽입
-> 이미지 사이즈가 너무 크면 벗어남 (10x10 픽셀이 가장 좋음)

기본 형식

선택자{list-style-image:url(이미지 경로); }
*/

/*
@ list-style-position
-> 목록 기호 들여쓰기

inside	: 블릿이나 숫자를 안쪽으로 들여 씀
outside	: default 블릿이나 숫자를 밖으로 내어 씀

기본형식
선택자{list-style-position:inside 또는 outside; }
*/

/*
@ list-style
-> 목록 스타일 한번에 지정하는 속성

기본 형식
선택자{list-style : type값 position값 image값; }
*/

======================================================================================
# CSS 색상 스타일
https://codepen.io/codeld6/pen/aryRdR
======================================================================================

/*

@ background-color
-> 배경색을 지정하는 속성

기본 형식
선택자 { background-color : 색상표현; }

@ background-clip
-> 배경 범위 조절

border-box	: 박스 모델의 가장 외과인 테두리까지 적용
padding-box	: 테두리 제외한 패딩 범위 까지 적용
content-box	: 내용부분만 적용

선택자 {background-clip:속성값; }

@ background-image
->  요소에 배경지정 속성

기본 형식
선택자 { background-image : url(경로); 

@ background-repeat
-> 배경이미지 반복 출력 설정

repeat		브라우저에 가득 찰 때까지 가로/세로 반복
repeat-x	넓이만큼 반복(가로)
repeat-y	높이 만큼 반복 (세로)
no-repeat	이미지 한번만 출력

기본 형식
선택자 { background-repeat : 속성값 ;}

@ background-size
-> 배경이미지의 크기를 조절하는 속성

auto			원래 배경이미지 크기만큼 표시
contain			요소안으로 이미지가 들어올 수 있게 확대/축소 함
cover			요소의 범위를 이미지가 덮을 수 있도록 확대/축소
크기값(px)/백분율	수치화된 값으로 표현(가로,세로)


기본 형식
선택자 { background-size : 속성값 ; }

@ background-position
-> 배경 이미지 위치를 조정하는 속성

left / center / right	수평위치		
top / center / botton	수직위치		
크기값(px) / 백분율	수치화된 값으로 표현(가로 세로) -> 왼쪽 모서리 좌표

기본 형식
선택자 { background-position : 속성값 ; }

@ background-origin
-> 배경이미지 배치할 때 기준을 지정하는 속성

border-box	테두리가 기준
padding-box	테두리를 뺀 패딩이 기준
content-box	내용부분이 기준

기본 형식
선택자 { background-origin : 속성값; 

@ background-attachment
-> 웹페이지가 위아래로 움직여도 배경이미지는 움직이지 않게 고정하는 속성

scroll		: default, 배경이미지가 움직이게 설정 
fixed		: 배경이미지가 움직이지 않게 설정


기본 형식
선택자 { background-attachment : 속성값; }

@ background
-> 배경이미지 설정을 한번에 하는 속성

기본 형식
선택자 { background : image값 repeat값 attachment값   
                     position값 clip값 origin값 size값;}

@ 선형 그라데이션
-> 색상이 수직, 수평, 대각선 방향으로 일정하게 변하는 것
	- 웹 표준으로 지정되었지만 이전 버전과 호환을 위해 브라우저별 접두사를 이용,
	그라데이션 표현방법이 약간씩 다름

기본 형식 (표준)
선택자 { background : -접두사-linear-gradient (아래와 동일) 또는
	 background : linear-gradient(각도 or 방향, 시작색상, [color-stop(색상,위치)], 끝색상; 
}	

### 방향
to top		: 아래에서 위로 그려지는 그라데이션
to left		: 오른쪽에서 왼쪽으로 그려지는 그라데이션
to right	: 왼쪽에서 오른쪽으로 그려지는 그라데이션
to bottom	: 위에서 아래로 그려지는 그라데이션

### 각도
숫자 deg	: 위쪽을 기준(0도)으로 시계방향으로 각도 증가

### 브라우저별 접두사
-webkit-	크롬, 사파리		
-o-		오페라			
-moz-		파이어 폭스		
-ms-		익스플로러		

### 시작색상 / 끝색상
색상표시	: 색단어 또는 rgb 또는 16진수 표기법

### 중지점 색상 / 위치
색상표시 	: 색단어 또는 rgb 또는 16진수 표기법
위치		: 백분율(%)로 표시

@ 원형 그라데이션
-> 색상이 원이나 타원의 중심부터 동심원을 그리며 바깥방향으로 색상변경

기본 형식

선택자 { background:접두사 radial-gradient(위치 모양, 크기, 시작색상, 끝색상); 
	또는
	background: radial-gradient(모양 크기 at 위치, 시작색상, 끝색상);
}

일반적으로 두 가지 경우가 가능하나,
접두사를 붙일 경우 위의 것만 가능합니다.

	※ 인자값은 최소 2개 이상 (시작색상과 끝색상)
	-> 만약 위치 및 모양에 대한 인자값이 없으면 모양은 elipse 형이고, 크기는 closet-side 임

@ 그라데이션 반복 (선형)
-> 그라데이션 패턴 요소를 다 채울 때까지 반복하는 것


기본 형식
선택자{ 
	background : 접두사 repeating-linear-gradient(모양,시작색상,끝색상 중단위치); 
  	background : repeating-linear-gradient(모양,시작색상, 끝색상 중단위치 );
}

	※ 두가지 색이 뚜렷하게 구분되는 것이 아니라 색이 흐린 한 부분에서 색이 섞여 다른 색으로 보임




## 두가지 색이 뚜렷하게 구분된 반복

선택자 {
	background : 접두사 repeating-linear-gradient(모양, 시작색상, 시작색상 중단위치, 
							끝색상, 끝색상 중단위치);
	background : repeating-linear-gradient(모양, 시작색상, 시작색상 중단위치, 끝색상, 끝색상 중단위치);
}




### 그라데이션 반복 (원형)

선택자 { 
	background : 접두사 repeating-radial-gradient(모양, 시작색상, 끝색상 중단위치);
	background : repeating-linear-gradient(모양, 시작색상, 끝색상 중단위치);
}
	※ 두가지 색이 뚜렷하게 구분되는 것이 아니라 색이 흐린 한 부분에서 색이 섞여 다른 색으로 보임


### 두가지 색이 뚜렷하게 구분된 반복

선택자 { 
	background : 접두사 repeating-radial-gradient(시작 색상, 시작색상 중단위치, 끝색상, 끝색상 중단위치);
	background : repeating-linear-gradient(시작 색상, 시작색상 중단위치, 끝색상, 끝색상 중단위치));	

*/

======================================================================================
# CSS 레이아웃 스타일
https://codepen.io/codeld6/pen/EzvMzN
======================================================================================
/*
@ height / width
-> 콘텐츠(내용)이 차지하고 있는 영역의 크기를 조절할 수 있는 속성

선택자 { 
	width : 숫자(단위) 또는 auto(default);
	height : 숫자(단위) 또는 auto(default);
}

-> 상태크기 단위를 입력하면 창크기에 따라 변경되지만 절대크기 단위를 입력하면 창크기에 따른 변화가 없음

@ 블록 레벨 요소와 인라인 레벨 요소
-> html 태그에는 블록 과 인라인 형태로 볼 수 있음

블록 레벨 요소 
-> 한 줄 전체를 자치하는 요소 (박스 모델이라고도 함)
-> 한 줄에 여러 요소가 올 수 없음
-> 블록 단위기 때문에 크기 조절이 가능
-> 자동 줄 개행 
-> 종류 : div 태그, h1 태그 ~ h6, p 태그, 목록 태그, 테이블 태그, form 태그

인라인 레벨 요소 
-> 한 줄에서 일부분만 차지하는 요소
-> 한 줄에 여러 요소가 올 수 있음
-> 한 부분만 해당 되기 때문에 크기 조절이 불가능
-> 자동 줄 개행 안함
-> 종류 : span 태그, a 태그, input 태그, 글자형식 태그

@ display 속성
-> 각 태그들이 눈에 보이는 속성
-> 대표적인 display 속성에는 block, inline, none, inline-block이 있음

# none 속성
-> 말 그대로 없애 버림
-> 주로 탭 메뉴나 드롭다운 메뉴처럼 없어졌다 나타나는 기능을 구현할 때 숨겨 놓는 용도로 자주 사용하는 속성

# block 속성
-> inline 레벨 요소 태그를 block 속성으로 변경
-> block 속성으로 변경 되었기 때문에 inline 요소라 하더라도 크기를 조절할 수 있음

# inline-block 속성
-> 텍스트는 inline 이지만 (줄개행 안함) 영역 표시를 block 단위로 처리 하고 싶을때 사용하는 속성

# inline 속성
-> block 레벨 요소 태그를 inline 속성으로 변경

===================================================
★
@ 레이아웃 테두리 스타일
-> 테두리 레이아웃을 설정할 수 있는 속성

@ border-style
-> 테두리 스타일 지정


none	: 테두리가 나타나지 않음 (default 값)	 - 우선순위 최하위
hidden	: 테두리가 나타나지 않음 (none 과 같음..) - 우선순위 최상위
dashed	: 짧은 (dotted보다 길은 점선) 선으로 표시
dotted	: 점선의 테두리로 지정
double	: 두 개의 실선으로 지정
groove	: 테두리가 안으로 파진것처럼 보임
inset	: 테두리를 포함한 컨텐츠 영역이 안으로 들어간것처럼 보임
outset	: 테두리를 포함한 컨텐츠 영역이 밖으로 튀어나온것처럼 보임
ridge	: 테두리가 밖으로 튀어나온것처럼 보임
solid	: 실선으로 지정


@ border-width
-> 테두리의 두께를 정하는 속성

선택자 { 
border-[위치]-width : 숫자(단위) 또는 속성값 ; 
}


속성값  : thin(얇게), medium(중간 크기), thick(두껍게)
숫자	: 두께 정도 표시
위치	: top, right, left, bottom

	※ 위치를 설정하지 않고 전체 테두리 작성시 시계방향(위-우-아래-좌)으로 각 위치별 설정 가능

@ border-color
-> 테두리의 색상을 정하는 속성

선택자 { 
	border-[위치]-color : 색상값 ;
}
	※ 각 테두리별 설정하려면 위치(top,right,bottom,left)에 값을 넣고 전체를 한번에
	설정하려면 "border-color:색상값"을 이용

@ border
-> 테두리 두께, 스타일, 색상을 한번에 지정할 수 있는 속성

선택자 { border-[위치] : 두께 스타일 색상값 ; }

	※ 각 테두리별 설정하려면 위치(top,right,bottom,left)에 값 이용

===================================================

@ 여백 스타일
-> 여백은 블록 요소의 상하좌우에 빈 공간을 두는 것
-> 요소끼리 너무 인접해 있으면 시각적으로 갑갑해 보일 뿐만 아니라 터치 환경에서 정확한 터치 입력도 어려움
-> 여백 스타일에는 margin(마진), padding(패딩)이 있음
-> F12를 눌러서 보여 주면 됨

margin
	- 요소의 바깥쪽에 배치되는 여백이며 외부의 부모나 형제 사이에 삽입되는 빈 공간이다.
	- 요소의 크기에서 제외 됨

padding
	- 요소의 안쪽에 배치되는 여백이며 요소의 경계선과 내용물 사이에 삽입되는 빈 공간이다.
	- 요소의 크기에 포함 됨

	※ 박스 모델 구조.jpg 사진 참고 하여 설명하기


@ margin
-> box 레벨이나 inline 레벨의 요소들간의 간격을 조절하는 속성

선택자 { margin-[위치] : 숫자(단위) ; }



@ padding
-> 테두리와 콘텐츠 영역사이의 거리를 조절하는 속성

선택자 { padding-[위치] : 숫자(단위) ; }


@ 포지셔닝
-> box 모델(block), inline 모델을 페이지상에서 배치하는 스타일
-> 즉, 페이지 안 요소들을 원하는 위치에 배치하는 속성을 의미
-> position 스타일, float 스타일이 있음


@ box-sizing
-> 요소들은 모두 content 영역과 padding 영역, margin 영역으로 나눠져 있는데
이 요소들의 크기(width 속성)를 어떠한 영역까지 포함할 것인지 결정하는 속성

content-box	: default 값 콘텐츠 영역으로 설정
border-box	: border까지 영역으로 설정

-> 풀어서 설명하면
content-box는 size(width,height)를 정해주게 되면 content의 영역 크기만을 말하는 것!
border-box는 size(width,height)를 content, padding, border 영역을 포함한 크기를 말하는 것!

★★★★★
@ position
-> 페이지의 요소들을 자유롭게 배치해 주는 속성
-> top, left, right, bottom 으로 위치 지정

static		: 요소를 문서의 흐름에 맞춰 배치 (default) - 위치가 지정되지 않음
relative	: 이전 요소와 자연스럽게 연결해 배치, 위치지정 가능 (width, height)
absolute	: 원하는 위치를 지정해 배치 (width, height)
		-> 부모/조상 요소의 position 속성이 반드시 relative
fixed		: 지정한 위치에 고정 배치

선택자 { 
	position : 속성값;
	[top:숫자(단위)]; [left:숫자(단위)];
	[right:숫자(단위)]; [bottom:숫자(단위)];
}

@ visibility
-> 페이지에 특정 속성을 보이거나 보이지 않게 하는 속성

visible		: default, 요소가 화면에 보임
hidden		: 요소를 화면에서 안보이게 하지만 페이지의 공간은 차지하고 있음

	※ collapse 도 있으나 대부분의 브라우저에서 지원하지 않음

선택자 { 
	visibility : 속성값 ;
}

@ z-index
-> 페이지 안의 요소들을 순서대로 위로 쌓는 속성
-> 속성값이 크면 가장 위에 있는 요소, 작으면 밑에 있는 속성

	※ 항상 맨위에 요소가 위치해야 하면 값을 999 또는 1000 등의 큰 값으로 설정

선택자 { 
	z-index : 속성값; 
}

@ float
-> 페이지 내의 요소 위치를 왼쪽이나 오른쪽으로 지정하는 속성

right	: 오른쪽 배치
left	: 왼쪽 배치
none	: 배치 값을 설정하지 않음

선택자 { 
	float : 속성값;
}

@ clear
-> 페이지에 float 설정이 되어 있으면 그 속성이 그대로 다음 요소에 영향을 미치는데 이를
초기화 하는 속성

right	: 오른쪽 배치 취소
left	: 왼쪽 배치 취소
none	: 설정하지 않음 (앞에 내용 그대로 적용)
both	: 두 개 다 취소 함


선택자 { 
	clear : 속성값;
}

★★★★★
@ overflow
-> 표현하는 컨텐츠가 넘쳤을때 표현하는 기법
*/

/*        ★★★★★★★★★★★★★★★*/
/*        가로 세로 스크롤이 무조건 생김*/
        #ex10div1 { overflow : scroll; }
/*        스크롤이 내용에 따라 생김*/
        #ex10div2 { overflow : auto; }
/*        넘치는 것은 보여주지 않음*/
        #ex10div3 { overflow : hidden; }
/*        기본값, 넘치더라도 그냥 보여줌*/
        #ex10div4 { overflow : visible; }
/*        ★★★★★★★★★★★★★★★*/
